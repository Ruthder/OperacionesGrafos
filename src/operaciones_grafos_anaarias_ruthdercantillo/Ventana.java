/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package operaciones_grafos_anaarias_ruthdercantillo;

import java.awt.Color;
import java.awt.Graphics;
import java.util.PriorityQueue;

/**
 *
 * @author ariasal
 */
public class Ventana extends javax.swing.JFrame {

    Grafo g = new Grafo();
    Graphics grafico;
    int adyacencia[][], n = 0, i = 0, j = 0;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        grafico = jPanel1.getGraphics();
        jLabel1.setText("Ingrese el número de vértices: ");
        jLabel2.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );

        jLabel1.setText("jLabel1");

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        jButton2.setText("Dibujar grafo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Calcular grado");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Ingrese un vértice: ");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Grafo Euleriano");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Dijkstra");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Vertice Inicial: ");

        jLabel5.setText("Vertice Final: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jLabel1.getText().equals("Ingrese el número de vértices: ")) {
            n = Integer.parseInt(jTextField1.getText());
            if (n != 0) {
                adyacencia = new int[n][n];
                jLabel1.setText("Ingrese adyacencia entre vértice " + i + " y vértice " + j + ":");
            }
        } else {
            if (n != 0) {
                if (Integer.parseInt(jTextField1.getText()) == 1 || Integer.parseInt(jTextField1.getText()) == 0) {
                    jLabel2.setText("");
                    if (i < n) {
                        jLabel1.setText("Ingrese adyacencia entre vértice " + i + " y vértice " + j + ":");
                        adyacencia[i][j] = Integer.parseInt(jTextField1.getText());
                        j++;
                        if (j == n) {
                            j = 0;
                            i++;
                        }
                        jLabel1.setText("Ingrese adyacencia entre vértice " + i + " y vértice " + j + ":");
                    }
                } else {
                    jLabel2.setText("Sólo ingresar 1 ó 0.");
                }
            }
        }
        jTextField1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean dirigido(int ad[][]) {
        for (int k = 0; k < n; k++) {
            for (int l = 0; l < n; l++) {
                if (ad[k][l] != ad[l][k]) {
                    return true;
                }
            }
        }
        return false;
    }

    public int grado(Vertice v) {
        int gs = 0;
        if (n != 0) {
            if (dirigido(adyacencia)) {
                jTextArea1.setText(jTextArea1.getText() + "El grafo es dirigido \n");
            } else {
                jTextArea1.setText(jTextArea1.getText() + "El grafo es no dirigido \n");
            }
            jTextArea1.setText(jTextArea1.getText() + "Vértice " + v.num + "\n");
            if (dirigido(adyacencia)) {

                int ge = 0;
                for (int k = 0; k < n; k++) {
                    ge = ge + adyacencia[v.num][k];
                    gs = gs + adyacencia[k][v.num];
                }
                jTextArea1.setText(jTextArea1.getText() + "Grado de entrada: " + ge + "\nGrado de salida: " + gs);
            } else {
                for (int k = 0; k < n; k++) {
                    gs = gs + adyacencia[v.num][k];
                }
                jTextArea1.setText(jTextArea1.getText() + "Grado del vértice: " + gs);
            }
        } else {
            jTextArea1.setText("No se ha creado la matriz de adyacencia.");
        }
        return gs;
    }

    public boolean euleriano(int ad[][]) {
        for (Vertice vertice : g.getVertices()) {
            if (grado(vertice) != 2) {
                return false;
            }
        }
        return true;
    }

    public void iniciarVecinos(int ad[][]) {
        for (int k = 0; k < n; k++) {
            Vertice v = g.getVerticeIndicado(k);
            for (int l = 0; l < n; l++) {
                if (ad[k][l] == 1) {
                    v.vecinos.add(g.getVerticeIndicado(l));
                }
            }
        }
    }

    public int[] dijkstra(int inicio, int fin, int maxvertices, int[][] matrix) {
        int[] distancia = new int[maxvertices + 1];
        int[] padre = new int[maxvertices + 1];
        boolean[] visto = new boolean[maxvertices + 1];
        for (int i = 1; i < maxvertices + 1; i++) {
            distancia[i] = 1;
            padre[i] = -1;
            visto[i] = false;
        }
        distancia[inicio] = 0;
        PriorityQueue<Integer> pila = new PriorityQueue<>();
        pila.add(distancia[inicio] + 1);
        while (!pila.isEmpty()) {
            int u = pila.poll();
            visto[u] = true;

            for (int h = 1; h < maxvertices + 1; h++) {
                if ((Integer) matrix[u][h] != 0) {
                    if (distancia[h] > distancia[u] + (Integer) matrix[u][h]) {
                        distancia[h] = distancia[u] + (Integer) matrix[u][h];
                        System.out.print("| " + matrix[u][h] + " u:" + u + " i:" + h);
                        padre[h] = u;
                        pila.add(h);
                    }
                }
            }
        }
        return distancia;
    }
    

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (n == 0) {
            jLabel2.setText("No se ha creado la matriz de adyacencia.");
        } else {
            for (int k = 0; k < n; k++) {
                int x = (int) (Math.random() * 849) + 1;
                int y = (int) (Math.random() * 292) + 1;
                Vertice v = new Vertice(k, x, y);
                grafico.setColor(Color.black);
                grafico.fillOval(x, y, 30, 30);
                grafico.setColor(Color.white);
                grafico.drawString(String.valueOf(k), x + 12, y + 18);
                g.InsertarVertice(v);
            }
            iniciarVecinos(adyacencia);
            if (dirigido(adyacencia)) {
                for (Vertice vertice : g.getVertices()) {
                    for (Vertice vecino : vertice.vecinos) {
                        grafico.setColor(Color.black);
                        grafico.drawLine(vertice.x + 5, vertice.y + 15, vecino.x + 5, vecino.y + 15);
                    }
                }
            } else {
                for (Vertice vertice : g.getVertices()) {
                    for (Vertice vecino : vertice.vecinos) {
                        grafico.setColor(Color.black);
                        grafico.drawLine(vertice.x + 15, vertice.y + 15, vecino.x + 15, vecino.y + 15);
                        grafico.setColor(Color.white);
                        grafico.drawString(String.valueOf(vecino.num), vecino.x + 12, vecino.y + 18);
                        grafico.drawString(String.valueOf(vecino.num), vecino.x + 12, vecino.y + 18);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!jTextField2.getText().equals("")) {
            int info = Integer.parseInt(jTextField2.getText());
            int cont = 0;
            for (Vertice vertice : g.getVertices()) {
                if (vertice.num == info) {
                    grado(vertice);
                } else {
                    cont++;
                }
            }
            if (cont == n) {
                jTextArea1.setText("No existe el vértice " + info);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (n != 0) {
            if (euleriano(adyacencia)) {
                jTextArea1.setText("El grafo es Euleriano.");
            } else {
                jTextArea1.setText("El grafo no es Euleriano.");
            }
        } else {
            jTextArea1.setText("No se ha creado la matriz de adyacencia.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int xd[] = dijkstra(Integer.parseInt(jTextField3.
                getText()), Integer.parseInt(jTextField4.getText()),
                n - 1, adyacencia);
        jTextArea1.setText(jTextArea1.getText() + "Cámino desde " + jTextField3.
                getText() + ": " + "\n" + jTextField3.getText());
        int ant = Integer.parseInt(jTextField3.getText());
        if (ant > Integer.parseInt(jTextField4.getText())) {
            for (int k = ant; k >= Integer.parseInt(jTextField4.getText()); k--) {
                if (xd[k] == 1) {
                    jTextArea1.setText(jTextArea1.getText() + k + " ");
                }
            }
        } else {
            for (int k = ant; k <= Integer.parseInt(jTextField4.getText()); k++) {
                if (xd[k] == 1) {
                    jTextArea1.setText(jTextArea1.getText() + k + " ");
                }
            }
        }
        jTextField3.setText("");
        jTextField4.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
